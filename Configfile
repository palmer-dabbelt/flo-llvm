# This strives to build my C++ code in the safest way possible.
LANGUAGES   += c++
COMPILEOPTS += -Wall
COMPILEOPTS += -Wextra
COMPILEOPTS += -Werror
COMPILEOPTS += -std=c++11
COMPILEOPTS += -pedantic

# Staticly link against some internal libraries
LANGUAGES   += c++
COMPILEOPTS += -Isrc

# BASH is used to run tests
LANGUAGES   += bash

# This reads the version information from git and makes it availiable
# for all the other code.
GENERATE    += version.h

# Here's a simple little wrapper that calls the compiler a bunch of
# times in order to produce a result.
BINARIES    += flo-llvm
SOURCES     += wrapper.bash

# This binary generates code that's compatible with Chisel's old C++
# API.  This maintains full source compatibility but has two problems:
# it's going to be tough to map to DREAMER, and it may disable some
# compiler optimizations.
BINARIES    += flo-llvm-c++
COMPILEOPTS += `ppkg-config flo --cflags`
LINKOPTS    += `ppkg-config flo --libs`
SOURCES     += main-c++.c++

# Here are some handwritten tests that use Chisel
TESTSRC     += chisel_iomux.bash
TESTSRC     += chisel_iocnt.bash
TESTSRC     += chisel_counter-128.bash
TESTSRC     += chisel_counter-128-neq.bash
TESTSRC     += chisel_bigcat.bash
TESTSRC     += chisel_mem.bash

# These tests all come from the Chisel tutorial
TESTSRC += tutgen_Adder4.bash
TESTSRC += tutgen_Adder.bash
TESTSRC += tutgen_ByteSelector.bash
TESTSRC += tutgen_Combinational.bash
TESTSRC += tutgen_Darken.bash
TESTSRC += tutgen_EnableShiftRegister.bash
TESTSRC += tutgen_FullAdder2.bash
TESTSRC += tutgen_FullAdder.bash
TESTSRC += tutgen_Functional.bash
TESTSRC += tutgen_GCD.bash
TESTSRC += tutgen_HiLoMultiplier.bash
#TESTSRC += tutgen_Life.bash
TESTSRC += tutgen_LogShifter.bash
#TESTSRC += tutgen_MemorySearch.bash
TESTSRC += tutgen_Parity.bash
TESTSRC += tutgen_ResetShiftRegister.bash
#TESTSRC += tutgen_Risc.bash
#TESTSRC += tutgen_Router.bash
#TESTSRC += tutgen_ShiftRegister.bash
#TESTSRC += tutgen_Stack.bash
#TESTSRC += tutgen_Tbl.bash
#TESTSRC += tutgen_VecSearch.bash
